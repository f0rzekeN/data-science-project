import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report
from sklearn.impute import SimpleImputer

file_path = 'fraudulent.csv'
data = pd.read_csv(file_path)

missing_values = data.isnull().sum()

mode_imputer = SimpleImputer(strategy='most_frequent')

features_to_impute = missing_values[missing_values < 1000].index

data[features_to_impute] = mode_imputer.fit_transform(data[features_to_impute])

features_to_drop = missing_values[missing_values >= 1000].index
data.drop(columns=features_to_drop, inplace=True)

missing_values_after_imputation = data.isnull().sum()

X = data.drop(columns=['y'])
y = data['y']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)

scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

rf_classifier = RandomForestClassifier(random_state=1)

rf_classifier.fit(X_train_scaled, y_train)

y_pred = rf_classifier.predict(X_test_scaled)

accuracy = accuracy_score(y_test, y_pred)

classification_report_str = classification_report(y_test, y_pred)

##print(f'f1:{f1-score}')
##print(f'Accuracy: {accuracy}')
print(classification_report_str)
